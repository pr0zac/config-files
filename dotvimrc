set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" My Bundles here:
Plugin 'Shougo/vimproc'
Plugin 'tomasr/molokai'
Plugin 'Shougo/neosnippet.vim'
Plugin 'Shougo/neosnippet-snippets'
Plugin 'kien/ctrlp.vim'
Plugin 'Shougo/vimshell'
Plugin 'scrooloose/syntastic'
Plugin 'sjl/gundo.vim'
Plugin 'luochen1990/rainbow'
Plugin 'tpope/vim-fugitive'
Plugin 'jlanzarotta/bufexplorer'
Plugin 'tpope/vim-surround'
Plugin 'ConradIrwin/vim-bracketed-paste'
Plugin 'fatih/vim-go'
Plugin 'hdima/python-syntax'
Plugin 'klen/python-mode'
Plugin 'moll/vim-node'
Plugin 'scrooloose/nerdtree'
Plugin 'vim-airline/vim-airline'
Plugin 'xolox/vim-misc'
Plugin 'xolox/vim-easytags'
Plugin 'majutsushi/tagbar'
Plugin 'vim-scripts/a.vim'
Plugin 'airblade/vim-gitgutter'
Plugin 'sheerun/vim-polyglot'
Plugin 'Raimondi/delimitMate'
Plugin 'Valloric/YouCompleteMe'
Plugin 'rdnetto/YCM-Generator'
Plugin 'tpope/vim-commentary'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

let g:rehash256=1
color molokai
set background=dark

"dear f1 key, please go fuck yourself, sincerely zac
inoremap <f1> <esc>
nnoremap <f1> <esc>
vnoremap <f1> <esc>

syntax on
syn match tab display "\t"
hi link tab Error

set number

set backspace=indent,eol,start
set incsearch
set hlsearch
set clipboard=unnamedplus

set history=1000
set showbreak=...
set wrap linebreak nolist
set hidden

set smarttab
set softtabstop=2
set tabstop=2
set shiftwidth=2
set expandtab

set colorcolumn=81
highlight ColorColumn guibg=Grey16

set undodir=~/.vim_other/_backup
set undofile

let g:ycm_autoclose_preview_window_after_completion=1
let g:ycm_collect_identifies_from_tags_files=1
let g:ycm_confirm_extra_conf=0
map <C-g>  :YcmCompleter GoTo<CR>

let g:ctrlp_clear_cache_on_exit=0

set wildignore+=*/tmp/*,*.so,*.swp,*.zip  " MacOSX/Linux
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\.git$\|\.hg$\|\.svn$',
  \ 'file': '\.exe$\|\.so$\|\.dll$',
  \ }

let g:ctrlp_max_files=0
let g:ctrlp_max_depth=50
let g:ctrlp_lazy_update=1

set wildmode=longest,list,full
set wildmenu

let $NVIM_TUI_ENABLE_CURSOR_SHAPE=1

"Show leading whitespace that includes spaces, and trailing whitespace.
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/
autocmd BufWinLeave * call clearmatches()

"jump to last cursor position when opening a file
"dont do it when writing a commit log entry
autocmd BufReadPost * call SetCursorPosition()
function! SetCursorPosition()
  if &filetype !~ 'commit\c'
    if line("'\"") > 0 && line("'\"") <= line("$")
      exe "normal! g`\""
      normal! zz
    endif
  end
endfunction

"statusline setup
"set laststatus=2
"set statusline=%f       "tail of the filename
"set statusline+=%h      "help file flag
"set statusline+=%m      "modified flag
"set statusline+=%r      "read only flag
"set statusline+=%y      "filetype
"set statusline+=%{fugitive#statusline()}    "git branch info
"set statusline+=%=      "left/right separator
"set statusline+=%c,     "cursor column
"set statusline+=%l/%L   "cursor line/total lines
"set statusline+=\ %P    "percent through file

map <C-n> :NERDTreeToggle<CR>

let g:rainbow_active = 1

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 1
let g:syntastic_cpp_compiler_options = "-std=c++11 -Wall -Wextra -Wpedantic"

set cpoptions+=d
set tags=./.tags;,~/.vim/tags
let g:easytags_events = ['BufReadPost', 'BufWritePost']
let g:easytags_async = 1
let g:easytags_dynamic_files = 2
let g:easytags_resolve_links = 1
let g:easytags_suppress_ctags_warning = 1
let g:tagbar_autofocus = 1
let g:tagbar_autoclose = 1
map <C-t> :TagbarToggle<CR>

let g:airline#extensions#hunks#non_zero_only = 1
