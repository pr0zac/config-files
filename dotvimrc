set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" My Bundles here:
" Plugin 'tomasr/molokai'
Plugin 'sonph/onehalf', {'rtp': 'vim/'}
Plugin 'qpkorr/vim-bufkill'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'scrooloose/syntastic'
Plugin 'luochen1990/rainbow'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-surround'
Plugin 'ConradIrwin/vim-bracketed-paste'
Plugin 'fatih/vim-go'
Plugin 'klen/python-mode'
Plugin 'roxma/python-support.nvim'
Plugin 'scrooloose/nerdtree'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'xolox/vim-misc'
Plugin 'xolox/vim-easytags'
Plugin 'majutsushi/tagbar'
Plugin 'vim-scripts/a.vim'
Plugin 'airblade/vim-gitgutter'
Plugin 'Raimondi/delimitMate'
Plugin 'tpope/vim-commentary'
Plugin 'takac/vim-hardtime'
Plugin 'vim-scripts/proguard.vim'
Plugin 'dkprice/vim-easygrep'
Plugin 'blueyed/vim-diminactive'
Plugin 'tomlion/vim-solidity'
Plugin 'Shougo/vimproc.vim'
Plugin 'pangloss/vim-javascript'
Plugin 'styled-components/vim-styled-components'
Plugin 'elzr/vim-json'
Plugin 'jparise/vim-graphql'
Plugin 'HerringtonDarkholme/yats.vim'
Plugin 'mxw/vim-jsx'
Plugin 'ianks/vim-tsx'
Plugin 'leafgarland/typescript-vim'
Plugin 'maxmellon/vim-jsx-pretty'
Plugin 'sheerun/vim-polyglot'

let g:polyglot_disabled = ['jsx']

if !exists('g:gui_oni')
  Plugin 'Yggdroot/indentLine'
  Plugin 'ervandew/supertab'
  Plugin 'Shougo/neco-syntax'
  Plugin 'roxma/nvim-yarp'
  Plugin 'ncm2/ncm2'
  Plugin 'ncm2/ncm2-bufword'
  Plugin 'ncm2/ncm2-path'
  Plugin 'ncm2/ncm2-tagprefix'
  Plugin 'ncm2/ncm2-syntax'
  " Plugin 'mhartington/nvim-typescript'
  Plugin 'peitalin/vim-jsx-typescript'
endif


" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

syntax on
syn match tab display "\t"
hi link tab Error

"dear f1 key, please go fuck yourself, sincerely zac
inoremap <f1> <esc>
nnoremap <f1> <esc>
vnoremap <f1> <esc>

set number
set backspace=indent,eol,start
set incsearch
set hlsearch
set clipboard=unnamedplus
set nomodeline

set history=1000
set showbreak=...
set wrap linebreak nolist
set hidden

set smarttab
set softtabstop=2
set tabstop=2
set shiftwidth=2
set expandtab

set undodir=~/.vim_other/_backup
set undofile

set t_Co=256
set cursorline
set colorcolumn=81
colorscheme onehalfdark
if exists('+termguicolors')
  let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
  let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
  set termguicolors
endif
" let $NVIM_TUI_ENABLE_TRUE_COLOR=1
" let g:rehash256=1
" colorscheme molokai
" hi Normal ctermfg=255 guifg=#FFFFFF
" hi Search ctermbg=yellow ctermfg=black
" highlight CursorLine guibg=#232425
" set colorcolumn=101
" highlight ColorColumn guibg=#242526
" set cursorline

if exists('g:gui_oni')
  autocmd BufReadPost,BufNewFile * call SetOniColors()
  function! SetOniColors()
    hi Search guibg=#FEF186 guifg=#111111
  endfunction
else
  " enable ncm2 for all buffers
  autocmd BufEnter * call ncm2#enable_for_buffer()

  set completeopt=noinsert,menuone
  set wildmode=longest,list,full
  set wildmenu

  let g:SuperTabLongestEnhanced              = 1
  let g:SuperTabLongestHighlight             = 1
  let g:SuperTabDefaultCompletionType        = "<c-n>"
  let g:SuperTabContextDefaultCompletionType = "<c-n>"
endif

" Setup tagging stuff
set cpoptions+=d
set tags=./.tags;,~/.vimtags
let g:easytags_events = ['BufReadPost', 'BufWritePost']
let g:easytags_async = 1
let g:easytags_dynamic_files = 2
let g:easytags_resolve_links = 1
let g:easytags_suppress_ctags_warning = 1
let g:tagbar_autofocus = 1
let g:tagbar_autoclose = 1
map <C-s> :TagbarToggle<CR>

set wildignore+=*/tmp/*,*.so,*.swp,*.zip  " MacOSX/Linux
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\.git$\|\.hg$\|\.svn$',
  \ 'file': '\.exe$\|\.so$\|\.dll$',
  \ }

" Ctrl-P configuration
let g:ctrlp_clear_cache_on_exit=0
let g:ctrlp_max_files=0
let g:ctrlp_max_depth=50
let g:ctrlp_lazy_update=1
let g:ctrlp_working_path_mode = 'r'
let g:ctrlp_extensions = ['tag', 'buffertag', 'quickfix']
" map <C-t> :CtrlPTag<CR>
map <C-[> :pop<CR>

" Automatic cursor changing
let $NVIM_TUI_ENABLE_CURSOR_SHAPE=1

"Show leading whitespace that includes spaces, and trailing whitespace.
autocmd ColorScheme * highlight ExtraWhitespace ctermbg=red guibg=red
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/
autocmd BufWinLeave * call clearmatches()
map gs :%s/\s\+$//e<CR>

"jump to last cursor position when opening a file
"dont do it when writing a commit log entry
autocmd BufReadPost * call SetCursorPosition()
function! SetCursorPosition()
  if &filetype !~ 'commit\c'
    if line("'\"") > 0 && line("'\"") <= line("$")
      exe "normal! g`\""
      normal! zz
    endif
  end
endfunction

" Configure NERDTree stuff
map <C-n> :NERDTreeToggle<CR>
autocmd StdinReadPre * let s:std_in=1
" autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
let g:NERDTreeQuitOnOpen = 1

" Activate rainbow {}s
let g:rainbow_active = 1

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 1
let g:syntastic_cpp_compiler_options = "-std=c++11 -Wall -Wextra -Wpedantic"
"hack so syntastic doesn't check java files
let g:loaded_syntastic_java_javac_checker = 1

let g:airline#extensions#hunks#non_zero_only = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#fnamemod = ':t'
let g:airline_theme='onehalfdark'
set laststatus=2
set ttimeoutlen=50

" The Silver Searcher
if executable('ag')
  " Use ag over grep
  set grepprg=ag\ --nogroup\ --nocolor
  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
endif

" Golang specific settings
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_fields = 1
let g:go_highlight_types = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1
au FileType go setlocal sw=4 sts=4 ts=4 noexpandtab

" Fix Java autocomplete
let g:android_sdk_path = '/Users/zacm/Library/Android/sdk'
autocmd FileType java setlocal omnifunc=javacomplete#Complete
autocmd FileType java setlocal sw=4 sts=4 ts=4 expandtab

" Buffer switching shortcuts
map gh :bp<CR>
map gl :bn<CR>
map gq :BD<CR>

" Fix page-up/page-down behavior
nnoremap <silent> <PageUp> <C-U><C-U>
vnoremap <silent> <PageUp> <C-U><C-U>
inoremap <silent> <PageUp> <C-\><C-O><C-U><C-\><C-O><C-U>

nnoremap <silent> <PageDown> <C-D><C-D>
vnoremap <silent> <PageDown> <C-D><C-D>
inoremap <silent> <PageDown> <C-\><C-O><C-D><C-\><C-O><C-D>

let g:tsuquyomi_completion_detail = 1

