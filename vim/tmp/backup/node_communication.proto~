package node_communication;

message NodeInfo {
	required string node_ip = 1;
	required int32 node_port = 2;
}

message AuthRequest {
	required string node_id = 1;
	required string username = 2;
	required string password = 3;
}

message AuthResult {
	required string transfer_id = 1;
	required bool success = 2;
}

message ReceiveCommand {
	required string transfer_id = 1;
	required NodeInfo sending_node = 2;
	required string save_location = 3;
}

message SendCommand {
	required string transfer_id = 1;
	required NodeInfo receiving_node = 2;
	required string file = 3;
}

message CancelCommand {
	required string transfer_id = 1;
}

message StatusCommand {
	required string transfer_id = 1;
}

message FileInfo {
	required string file_name = 1;
	required uint64 file_size = 2;
}

message FileList {
	required int32 count = 1;
	repeated FileInfo files = 2;
}

message StatusUpdate {
	enum StatusType { PROGRESS = 1; COMPLETE = 2; STOPPED = 3; FAILED = 4; }
	required StatusType status_type = 1;
	
	required string transfer_id = 2;
	optional float percent_complete = 3;
	optional double transfer_speed = 4;
	optional uint64 amount_transferred = 5;
}

message NodeMessage {
	enum Type { AUTH = 1; FILE_LIST = 2; STATUS = 3; }
	required Type type = 1;
	
	optional AuthRequest auth_request = 2;
	optional FileList file_list = 3;
	optional StatusUpdate status_update = 4;
}

message ServerMessage {
	enum Type { AUTH = 1; FILE_LIST = 2; RECEIVE = 3; SEND = 4; CANCEL = 5; TRANSFER = 6; }
	required Type type = 1;
	
	optional AuthResult auth_result = 2;
	optional ReceiveCommand recv_command = 3;
	optional SendCommand send_command = 4;
	optional CancelCommand cancel_command = 5;
	optional StatusCommand status_command = 6;
}
