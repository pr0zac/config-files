class IchatKnobSet < ActiveRecord::Base
    has_and_belongs_to_many :profiles

    serialize :ManagedAccounts, Hash

    @@payload_types = {"jabber" => "com.apple.iChat.Jabber",
        "aim" => "com.apple.iChat.AIM",
        "subnet" => "com.apple.iChat.SubNet"
    }

    @@type_map = {"com.apple.iChat.Jabber" => "jabber",
        "com.apple.iChat.AIM" => "aim",
        "com.apple.iChat.SubNet" => "subnet"
    }

    @@payload_subidentifier = "iChat"
    @@is_unique = false

    def self.payload_subidentifier
        @@payload_subidentifier
    end

    def self.is_unique
        @@is_unique
    end

    def self.is_for_ios
      return false
    end

    def self.payload_type
        return "com.apple.iChat"
    end

    def ChatType
        return self.internal_use_flag_chat_type
    end

    def ChatType= type
        self.internal_use_flag_chat_type = type
    end

    def payload_type
        @@payload_types[self.internal_use_flag_chat_type]
    end

    def payload_type= type
        self.internal_use_flag_chat_type = @@type_map[type]
    end    

    def self.payload_subidentifier
        @@payload_subidentifier
    end
    
    def self.is_unique
        @@is_unique
    end

    def []=(key,value)
      if key == "payload_type"
        self.payload_type = value
      elsif key == "ChatType"
        self.ChatType = value
      else
        super(key,value)
      end
    end

    def before_save
        if self.PayloadUUID == nil
            uuid = UUID.new
            self.PayloadUUID = uuid.generate
        end
        
        if self.PayloadVersion == nil
            self.PayloadVersion = 1
        else
            self.PayloadVersion = self.PayloadVersion + 1
        end
        
        for profile in self.profiles
            profile.save
        end
    end

    def get_attributes
        return_hash = self.attributes
        return_hash["payload_type"] = self.payload_type

        return_hash[:profiles] = []
        for profile in self.profiles
            return_hash[:profiles].push(profile.id)
        end
        
        return return_hash
    end
end
